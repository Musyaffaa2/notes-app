(()=>{var n,t={97:()=>{class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML=`\n      <style>\n        .app-bar {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          background: #48A6A7;\n          color: white;\n          padding: 15px 20px;\n          font-size: 20px;\n          font-weight: bold;\n          box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);\n        }\n        .title {\n          text-align: center; \n        }\n        .menu {\n          cursor: pointer;\n          font-size: 24px;\n        }\n      </style>\n      <div class="app-bar">\n        <span class="title">${this.getAttribute("title")||"Notes App"}</span>\n      </div>\n    `}}customElements.define("app-bar",n)},162:(n,t,e)=>{"use strict";var a=e(72),o=e.n(a),r=e(825),s=e.n(r),i=e(659),d=e.n(i),l=e(56),c=e.n(l),p=e(540),u=e.n(p),h=e(113),m=e.n(h),f=e(365),b={};b.styleTagTransform=m(),b.setAttributes=c(),b.insert=d().bind(null,"head"),b.domAPI=s(),b.insertStyleElement=u(),o()(f.A,b),f.A&&f.A.locals&&f.A.locals,e(97);let g=[],x=!1;async function y(){v();try{const n=x?"https://notes-api.dicoding.dev/v2/notes/archived":"https://notes-api.dicoding.dev/v2/notes",t=await fetch(n),e=await t.json();"success"===e.status?(g=e.data,function(){const n=document.getElementById("notes-container");n.innerHTML="",g.sort(((n,t)=>t.pinned-n.pinned||new Date(t.createdAt)-new Date(n.createdAt))).forEach((t=>{const e=document.createElement("note-item");e.note=t,n.appendChild(e)}))}()):alert(`Gagal memuat catatan: ${e.message}`)}catch(n){alert("Terjadi kesalahan saat mengambil data."),console.error(n)}finally{w()}}function v(){const n=document.createElement("p");n.textContent="Loading...",n.id="loading-indicator",n.style.textAlign="center",n.style.animation="fadeIn 0.5s ease-in-out",document.getElementById("notes-container").appendChild(n)}function w(){const n=document.getElementById("loading-indicator");n&&n.remove()}function k(){x=!x,y(),document.getElementById("toggle-archive").textContent=x?"Lihat Catatan Aktif":"Lihat Catatan Arsip"}document.addEventListener("DOMContentLoaded",(()=>{const n=document.createElement("button");n.id="toggle-archive",n.textContent="Lihat Catatan Arsip",n.style.margin="10px auto",n.style.display="block",n.style.padding="10px 20px",n.style.cursor="pointer",n.style.backgroundColor="#006A71",n.style.color="#fff",n.style.border="none",n.style.borderRadius="5px",n.addEventListener("click",k),document.querySelector("main").prepend(n),y()}));class E extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML='\n      <style>\n        @import url(\'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap\');\n\n        form {\n          display: flex;\n          flex-direction: column;\n          gap: 16px;\n          padding: 24px;\n          border-radius: 16px;\n          background: rgba(255, 255, 255, 0.3);\n          box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n          backdrop-filter: blur(10px);\n          -webkit-backdrop-filter: blur(10px);\n          font-family: \'Poppins\', sans-serif;\n          animation: fadeIn 0.6s ease-in-out;\n        }\n\n        @keyframes fadeIn {\n          from {\n            opacity: 0;\n            transform: translateY(15px);\n          }\n          to {\n            opacity: 1;\n            transform: translateY(0);\n          }\n        }\n\n        h2 {\n          text-align: center;\n          margin-bottom: 12px;\n          font-size: 22px;\n          font-weight: 600;\n          color: #222;\n        }\n\n        label {\n          font-weight: 600;\n          color: #333;\n        }\n\n        input,\n        textarea {\n          padding: 12px;\n          border-radius: 10px;\n          border: 1px solid #ccc;\n          font-size: 15px;\n          transition: border-color 0.3s ease;\n        }\n\n        input:focus,\n        textarea:focus {\n          outline: none;\n          border-color: #4dc0b5;\n        }\n\n        textarea {\n          resize: vertical;\n          min-height: 80px;\n        }\n\n        button[type="submit"] {\n          background-color: #48a6a7;\n          color: white;\n          font-weight: 600;\n          font-size: 16px;\n          padding: 12px;\n          border: none;\n          border-radius: 10px;\n          cursor: pointer;\n          transition: background-color 0.3s ease;\n        }\n\n        button[type="submit"]:hover {\n          background-color: #006a71;\n        }\n\n        @media (max-width: 768px) {\n          form {\n            padding: 16px;\n          }\n        }\n      </style>\n\n      <form id="note-form">\n        <h2>Tambah Catatan</h2>\n        <label for="title">Judul:</label>\n        <input type="text" id="title" name="title" placeholder="Judul" required />\n        <label for="body">Isi catatan:</label>\n        <textarea id="body" name="body" placeholder="Isi catatan" required></textarea>\n        <button type="submit" aria-label="Tambah Catatan">üìù Tambah Catatan</button>\n      </form>\n    '}connectedCallback(){this.shadowRoot.querySelector("#note-form").addEventListener("submit",(n=>{n.preventDefault();const t=this.shadowRoot.querySelector("#title").value,e=this.shadowRoot.querySelector("#body").value;!async function(n){v();try{const t=await fetch("https://notes-api.dicoding.dev/v2/notes",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({title:n.title,body:n.body})}),e=await t.json();"success"===e.status?(alert("Catatan berhasil ditambahkan!"),await y()):alert(`Gagal menambahkan catatan: ${e.message}`)}catch(n){alert("Error saat menambahkan catatan.")}finally{w()}}({id:Date.now().toString(),title:t,body:e,createdAt:(new Date).toISOString(),archived:!1,pinned:!1}),this.shadowRoot.querySelector("#note-form").reset()})),this.shadowRoot.querySelector("#title").addEventListener("input",(n=>{n.target.value.length<5?n.target.setCustomValidity("Judul harus minimal 5 karakter"):n.target.setCustomValidity("")}))}static get observedAttributes(){return["title-placeholder"]}attributeChangedCallback(n,t,e){"title-placeholder"===n&&(this.shadowRoot.querySelector("#title").placeholder=e)}}customElements.define("note-form",E);class C extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}set note(n){this.shadowRoot.innerHTML=`\n      <style>\n        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap');\n\n        .note {\n          background: rgba(255, 255, 255, 0.8);\n          border-radius: 20px;\n          backdrop-filter: blur(6px);\n          box-shadow: 0 12px 30px rgba(0, 0, 0, 0.1);\n          padding: 20px;\n          display: flex;\n          flex-direction: column;\n          justify-content: space-between;\n          font-family: 'Poppins', sans-serif;\n          transition: transform 0.2s ease, box-shadow 0.2s ease;\n          opacity: 0;\n          transform: translateY(30px);\n          animation: fadeInUp 0.6s ease-out forwards;\n        }\n\n        @keyframes fadeInUp {\n          to {\n            opacity: 1;\n            transform: translateY(0);\n          }\n        }\n\n        .note:hover {\n          transform: translateY(-5px);\n          box-shadow: 0 16px 40px rgba(0, 0, 0, 0.15);\n        }\n\n        .note h3 {\n          font-size: 20px;\n          font-weight: 600;\n          color: #2E2E2E;\n          margin-bottom: 5px;\n        }\n\n        .note p {\n          font-size: 14px;\n          color: #555;\n          margin: 5px 0 12px;\n        }\n\n        small {\n          font-size: 12px;\n          color: #888;\n        }\n\n        .note-footer {\n          display: flex;\n          justify-content: flex-end;\n          gap: 8px;\n          margin-top: 10px;\n        }\n\n        button {\n          padding: 8px 14px;\n          font-size: 13px;\n          border-radius: 12px;\n          font-weight: 500;\n          border: none;\n          cursor: pointer;\n          display: flex;\n          align-items: center;\n          gap: 6px;\n          transition: background-color 0.2s, transform 0.2s;\n        }\n\n        .delete-btn {\n          background-color: #FF4B5C;\n          color: white;\n        }\n\n        .archive-btn {\n          background-color: #333;\n          color: white;\n        }\n\n        button:hover {\n          transform: scale(1.05);\n        }\n      </style>\n\n      <div class="note">\n        <div class="note-content">\n          <h3>${n.title}</h3>\n          <p>${n.body}</p>\n          <small>${new Date(n.createdAt).toLocaleDateString()}</small>\n        </div>\n        <div class="note-footer">\n          <button class="delete-btn">üóë Hapus</button>\n          ${n.archived?"":'<button class="archive-btn">üì¶ Arsip</button>'}\n        </div>\n      </div>\n    `,this.shadowRoot.querySelector(".delete-btn").addEventListener("click",(()=>{!async function(n){v();try{const t=await fetch(`https://notes-api.dicoding.dev/v2/notes/${n}`,{method:"DELETE"}),e=await t.json();"success"===e.status?(alert("Catatan berhasil dihapus."),await y()):alert(`Gagal menghapus catatan: ${e.message}`)}catch(n){alert("Error saat menghapus catatan.")}finally{w()}}(n.id)}));const t=this.shadowRoot.querySelector(".archive-btn");t&&t.addEventListener("click",(()=>{!async function(n){v();try{const t=await fetch(`https://notes-api.dicoding.dev/v2/notes/${n}/archive`,{method:"POST"}),e=await t.json();"success"===e.status?(alert("Catatan berhasil diarsipkan."),await y()):alert(`Gagal mengarsipkan catatan: ${e.message}`)}catch(n){alert("Terjadi kesalahan saat mengarsipkan catatan.")}finally{w()}}(n.id)}))}}customElements.define("note-item",C);var A=e(776);document.addEventListener("DOMContentLoaded",(()=>{(0,A.A)({targets:"note-item",opacity:[0,1],translateY:[20,0],delay:A.A.stagger(100),duration:500,easing:"easeOutQuad"})}))},365:(n,t,e)=>{"use strict";e.d(t,{A:()=>i});var a=e(601),o=e.n(a),r=e(314),s=e.n(r)()(o());s.push([n.id,"body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 0;\n  background: #f2efe7;\n}\n\nmain {\n  max-width: 600px;\n  margin: 20px auto;\n  padding: 20px;\n  background: white;\n  border-radius: 10px;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n}\n\n#notes-container {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 15px;\n  padding: 20px;\n}\n",""]);const i=s}},e={};function a(n){var o=e[n];if(void 0!==o)return o.exports;var r=e[n]={id:n,exports:{}};return t[n](r,r.exports,a),r.exports}a.m=t,n=[],a.O=(t,e,o,r)=>{if(!e){var s=1/0;for(c=0;c<n.length;c++){for(var[e,o,r]=n[c],i=!0,d=0;d<e.length;d++)(!1&r||s>=r)&&Object.keys(a.O).every((n=>a.O[n](e[d])))?e.splice(d--,1):(i=!1,r<s&&(s=r));if(i){n.splice(c--,1);var l=o();void 0!==l&&(t=l)}}return t}r=r||0;for(var c=n.length;c>0&&n[c-1][2]>r;c--)n[c]=n[c-1];n[c]=[e,o,r]},a.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return a.d(t,{a:t}),t},a.d=(n,t)=>{for(var e in t)a.o(t,e)&&!a.o(n,e)&&Object.defineProperty(n,e,{enumerable:!0,get:t[e]})},a.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),(()=>{var n={792:0};a.O.j=t=>0===n[t];var t=(t,e)=>{var o,r,[s,i,d]=e,l=0;if(s.some((t=>0!==n[t]))){for(o in i)a.o(i,o)&&(a.m[o]=i[o]);if(d)var c=d(a)}for(t&&t(e);l<s.length;l++)r=s[l],a.o(n,r)&&n[r]&&n[r][0](),n[r]=0;return a.O(c)},e=self.webpackChunk=self.webpackChunk||[];e.forEach(t.bind(null,0)),e.push=t.bind(null,e.push.bind(e))})(),a.nc=void 0;var o=a.O(void 0,[244],(()=>a(162)));o=a.O(o)})();